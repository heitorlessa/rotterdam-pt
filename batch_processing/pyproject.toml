[tool.poetry]
name = "rotterdam-sample"
version = "0.1.0"
description = ""
authors = ["Heitor Lessa <lessa@amazon.com"]

[tool.poetry.dependencies]
python = "^3.9"
aws-lambda-powertools = {extras = ["pydantic"], version = "^1.26.2"}

[tool.poetry.dev-dependencies]
pytest = "^7.1.2"
pytest-dotenv = "^0.5.2"
pytest-cov = "^3.0.0"
mypy-boto3-sqs = "^1.20.12"
mypy = "^0.950"
black = "^22.3.0"
isort = "^5.10.1"
flake8-black = "^0.2.3"
flake8-builtins = "^1.5.3"
flake8-comprehensions = "^3.7.0"
flake8-debugger = "^4.0.0"
flake8-fixme = "^1.1.1"
flake8-isort = "^4.1.1"
flake8-variables-names = "^0.0.4"
pytest-mock = "^3.6.1"
requests = "^2.26.0"
flake8-eradicate = "^1.2.0"
flake8-bugbear = "^21.11.29"
radon = "^5.1.0"
xenon = "^0.9.0"
bandit = "^1.7.4"
mkdocs-material = "^8.2.13"
mypy-boto3-sns = "^1.22.0"
mkdocstrings = {extras = ["python"], version = "^0.18.1"}
pytest-socket = "^0.5.1"
diagrams = "^0.21.1"
Faker = "^13.14.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# Formatting
[tool.black]
line-length = 120
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | example
)
'''

# Formatting
[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 120
known_first_party= "policy_masking"

# Test
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -vv"
testpaths = "./tests"

# Test coverage
[tool.coverage.report]
fail_under = 90
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Ignore type checkers
    "if TYPE_CHECKING:",
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]
branch = true

[tool.coverage.html]
directory = "test_report"
title = "Rotterdam Batch Processing Sample Test Coverage"

# Static analysis
[tool.mypy]
warn_return_any = true
warn_unused_configs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
namespace_packages = false
plugins = "pydantic.mypy"

[[tool.mypy.overrides]]
module = ['boto3', 'botocore']
ignore_missing_imports = true
